
# Rate Limiting Configuration for Nginx
# This configuration sets up a rate limit for incoming requests to prevent abuse.
limit_req_zone $binary_remote_addr zone=eee:10m rate=30r/s; # 30 requests per second

server {
    server_name domain.com;  # Replace with your domain name

    # Serve custom block page for 403 (Forbidden) or 429 (Too Many Requests)
    error_page 403 /blockpage/index.html;
    error_page 429 /blockpage/index.html;

    location /blockpage/ {
            root /var/www;
        internal;
    }


   location / {

        # Apply the rate limit to this location
        limit_req zone=eee burst=20 nodelay; # Allow bursts of up to 30 requests without delay
        limit_req_status 429;

        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";


        proxy_pass http://localhost:<port>;  # Forward to your client app on port>
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Log only limit-exceeded requests in a separate log
        error_log /var/log/nginx/limit_req_error.log warn;
    }

    # Handle login requests with a different rate limit
    location /login {
        limit_req zone=eee burst=5 nodelay;  # Apply a different rate limit for login , allowing bursts of 5 requests
        limit_req_status 429;
        proxy_pass http://localhost:<port>;  # Forward to your login handler on port>
    }



    # Proxy WebSocket requests to the Socket.IO backend
    location /socket {  
        proxy_pass http://localhost:<port>;  # Forward to your Socket.IO backend on port>
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}